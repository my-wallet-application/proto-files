
syntax = "proto3";
package wallets;
import "google/protobuf/empty.proto";

message ExecuteSwapGrpcRequest {
    string ProcessId = 1;
    string SwapQuoteId = 2;

}

enum GrpcOperationResult{
    Ok = 0;
    NotEnoughFunds=1;
    SwapQuoteExpired=2;
    NoLiquidity=3;
    NotEnoughAmountOfAsset = 4;
}

message SendGrpcRequest {
    string FromClientId = 1;
    string ToClientId = 2;
    double Amount = 3;
    string ProcessId = 4;
    string WalletId = 5;
    int64 Timestamp = 6;
}

message GrpcWalletDestination{
    string ToClientId = 1;
    double Amount = 2;
}

message SendGrpcResponse {
    GrpcOperationResult Result = 1;
    double FromBalance = 2;
    double ToBalance = 3;
    int64 ExecutedTimestamp = 4;
}

message SentToGrpcModel{
    string ToClientId = 1;
    double Balance = 2;
}

message SwapGrpcResponse {
    GrpcOperationResult Result = 1;
    double SellWalletBalance = 2;
    double BuyWalletBalance = 3;
    int64 ExecutedTimestamp =4;
}

message BalanceUpdateGrpcRequest {
    string ProcessId = 1;
    int64 Timestamp = 2;
    repeated BalanceUpdateCommands BalanceUpdates = 3;
}

message BalanceUpdateCommands {
    string ClientId = 1;
    string Wallet = 2;
    double Delta = 3;
}

message BalanceUpdateGrpcResponse {
    GrpcOperationResult Result = 1;
    int64 ExecutedTimestamp = 2;
    repeated double Balances = 3;
}

message GetWalletsBalanceRequest {
    string ClientId = 1;
}

message WalletBalanceGrpcModel{
    string Wallet = 1;
    double Balance = 2;
}

message GetSwapQuoteRequest{
    string ClientId = 1;
    string FromAssetId = 2;
    string ToAssetId = 3;
    double FromAmount = 4; // -1 means max amount
    double ToAmount = 5; 
}


message GetSwapQuoteGrpcResponse{
    GrpcOperationResult Result = 1;
    string Id = 2;
    double FromAmount = 3;
    double ToAmount = 4;
    int32 ExpirationSeconds = 5;
}


service WalletsFlowsGrpcService {
    rpc GetSwapQuote(GetSwapQuoteRequest) returns (GetSwapQuoteGrpcResponse);
    rpc ExecuteSwap(ExecuteSwapGrpcRequest) returns (SwapGrpcResponse);
    rpc BalanceUpdate(BalanceUpdateGrpcRequest) returns (BalanceUpdateGrpcResponse);
    rpc GetWalletsBalance(GetWalletsBalanceRequest) returns (stream WalletBalanceGrpcModel);
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
 }

